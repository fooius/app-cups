#!/bin/sh

BIN_DIR=/opt/epson_pcs/portcommunicationservice
VAR_DIR=/var/epson_pcs/portcommunicationservice
VAR_LOG_DIR=/var/epson_pcs/devicecontrollog
PCS_LNK=portcommunicationserviced
PCS_SETTING=pcs.properties
PCS_SOCKET=pcsvc.socket
PCS_PID=pcsvcd.pid
LOG_LNK=devicecontrollogserviced
LOG_SETTING=log.settings
LOG_SOCKET=logd.socket
LOG_PID=devicecontrollogserviced.pid
LOG_FILE_NAME=log.txt
BACKUP_LOG_PATTERN=std*.gz

SRV_NAME=epson_pcsvcd
LOG_SRV_NAME=epson_devicecontrollogserviced

if [ "$1" = "remove" ] ; then
	/etc/init.d/$SRV_NAME stop
	/etc/init.d/$LOG_SRV_NAME stop

	update-rc.d -f $SRV_NAME remove
	update-rc.d -f $LOG_SRV_NAME remove

	rm -f /etc/init.d/$SRV_NAME
	rm -f /etc/init.d/$LOG_SRV_NAME
	killall -s SIGKILL /usr/sbin/$PCS_LNK 1>/dev/null 2>&1
	killall -s SIGTERM /usr/sbin/$LOG_LNK 1>/dev/null 2>&1

	LOG_DIR=$($BIN_DIR/property-reader $VAR_LOG_DIR/$LOG_SETTING Log.Path)
	if [ "$LOG_DIR" = "" ] ; then
		LOG_DIR=$VAR_LOG_DIR
	fi
	rm -f $LOG_DIR/$LOG_FILE_NAME
	rm -f $LOG_DIR/$BACKUP_LOG_PATTERN
	rm -f $VAR_DIR/$PCS_SETTING
	rm -f $VAR_DIR/$PCS_SOCKET
	rm -f $VAR_LOG_DIR/$LOG_SETTING
	rm -f $VAR_LOG_DIR/$LOG_SOCKET
	rm -f /var/run/$PCS_PID
	rm -f /var/run/$LOG_PID

	if [ -d $LOG_DIR ] ; then
		rmdir --ignore-fail-on-non-empty $LOG_DIR
	fi
	if [ -d $VAR_DIR ] ; then
		rmdir --ignore-fail-on-non-empty $VAR_DIR
	fi
	if [ -d $VAR_LOG_DIR ] ; then
		rmdir --ignore-fail-on-non-empty $VAR_LOG_DIR
	fi

	exit 0
fi

exit 0

